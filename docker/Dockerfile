# Multi-stage build for Swarm Arena\nFROM python:3.9-slim as builder\n\n# Set environment variables\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1\n\n# Install system dependencies\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    curl \\\n    git \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Create virtual environment\nRUN python -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\n# Copy requirements and install Python dependencies\nCOPY pyproject.toml /tmp/\nWORKDIR /tmp\nRUN pip install --upgrade pip setuptools wheel && \\\n    pip install -e .\n\n# Production stage\nFROM python:3.9-slim as production\n\n# Set environment variables\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PATH=\"/opt/venv/bin:$PATH\"\n\n# Install runtime dependencies\nRUN apt-get update && apt-get install -y \\\n    curl \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && groupadd -r swarm && useradd -r -g swarm swarm\n\n# Copy virtual environment from builder\nCOPY --from=builder /opt/venv /opt/venv\n\n# Create application directory\nWORKDIR /app\n\n# Copy application code\nCOPY swarm_arena/ ./swarm_arena/\nCOPY examples/ ./examples/\nCOPY README.md ./\nCOPY pyproject.toml ./\n\n# Install application in development mode\nRUN pip install -e .\n\n# Create directories for data and logs\nRUN mkdir -p /app/data /app/logs && \\\n    chown -R swarm:swarm /app\n\n# Switch to non-root user\nUSER swarm\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \\\n    CMD python -c \"import swarm_arena; print('OK')\" || exit 1\n\n# Expose ports\nEXPOSE 8765 8080\n\n# Default command\nCMD [\"python\", \"examples/basic_usage.py\"]"